//трикутник циклом for
var j; // змінна j оголошена, але ще не має значення.
for (var i = 1, j = "*"; i < 6; j += "*") // ініціалізуються дві змінні: i = 1, j = "*" (виконується лише один раз перед початком циклу); умова: поки і менше 6, цикл працює; оновлення:після кожної ітерації до джей додається ще один *
{
    console.log(j);
    i += 1; //і змінюється в середині тіла циклу, а не у блоці оновлення (особливість)
}

//можна ініціалізувати змінні та блок оновлення одразу в середині циклу
for (var i = 1, j = "*"; i <= 5; i++, j += "*")
{
    console.log(j);
}

// трикутник циклом while
let i = 0; //лічильник ітерацій
let j = '*' //початковий ряжок із зірочкою
while (i < 6) { // поки і менше 6, 
    console.log(j); // виводимо поточний рядок
    j += '*' //додаємо ще одну *
    i++; //  потім збільшуємо на 1, і перевіряємо ще раз, доки і задовольняє умову
}

//ДЗ: намалювати прямокутний трикутник із зірочок

// варіант перший з Function Declaration, та циклом for
function drawTriangle(rows, fill){
    for (var i = 1, j = fill; i <= rows; i++, j += fill) //краще лет , і і починати з 0
{
    console.log(j);
}
}
drawTriangle(5, '@')

//варіант дрйгий з Function Expression, та циклом while
var drawTriangle = function (rows, fill) {
    let i = 0;
    let j = fill;
    while (i < rows) {
        console.log(j);
        j += fill;
        i++;
    }
}
drawTriangle(6, '*')

